# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-02-21 03:32
from __future__ import unicode_literals

import IT_Dashboard.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import geoposition.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(default='topic name goes here', max_length=250)),
                ('image_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('background_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('video_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('image', models.ImageField(blank=True, null=True, upload_to=IT_Dashboard.models.category_file_upload)),
                ('background', models.ImageField(blank=True, null=True, upload_to=IT_Dashboard.models.category_file_upload)),
                ('description', models.TextField(default='topic Description goes here', max_length=40000)),
                ('name_th', models.CharField(blank=True, max_length=255, null=True)),
                ('description_th', models.TextField(blank=True, max_length=40000, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Fpe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('issue_state', models.IntegerField(default=0)),
                ('issue_date', models.DateField(null=True)),
                ('issue_subejct', models.CharField(max_length=255)),
                ('thai_name', models.CharField(max_length=255)),
                ('english_name', models.CharField(max_length=255)),
                ('tpac_id', models.IntegerField(default=7726)),
                ('department', models.CharField(blank=True, choices=[('Account (แผนกบัญชี)', 'Account (แผนกบัญชี)'), ('Assembly Injection (เตรียมวัตถุดิบ แผนกฉีด)', 'Assembly Injection (เตรียมวัตถุดิบ แผนกฉีด)'), ('Blow (แผนกเป่า)', 'Blow (แผนกเป่า)'), ('DOC&GMP', 'DOC&GMP'), ('Engineering (แผนกวิศวกรรม)', 'Engineering (แผนกวิศวกรรม)'), ('Human Resource (ฝ่ายทรัพยากรบุคคล)', 'Human Resource ()'), ('Injection (แผนกฉีด)', 'Injection (แผนกฉีด)'), ('Injection-Blow', 'Injection-Blow'), ('IT (IT.- ECONS)', 'IT (IT.- ECONS)'), ('IT (IT.- Hardware & Software)', 'IT (IT.- Hardware & Software)'), ('Logistic (แผนกจัดส่ง)', 'Logistic (แผนกจัดส่ง)'), ('MatPrepare', 'MatPrepare'), ('Mold Shop-Blow', 'Mold Shop-Blow'), ('Planning (วางแผนการผลิต)', 'Planning (วางแผนการผลิต)'), ('Purchase (แผนกจัดซื้อ)', 'Purchase (แผนกจัดซื้อ)'), ('Quality Assurance(ส่วนประกันคุณภาพ )', 'Quality Assurance(ส่วนประกันคุณภาพ )'), ('COA (ส่วนประกันคุณภาพ )', 'COA (ส่วนประกันคุณภาพ )'), ('R&D (แผนกวิจัยพัฒนาผลิตภัณฑ์)', 'R&D (แผนกวิจัยพัฒนาผลิตภัณฑ์)'), ('Sales Admin (แผนกบริหารงานขาย)', 'Sales Admin (แผนกบริหารงานขาย)'), ('Sales Technic', 'Sales Technic'), ('Stock (แผนกคลังสินค้า)', 'Stock (แผนกคลังสินค้า)'), ('Store (แผนกพัสดุ)', 'Store (แผนกพัสดุ)')], max_length=250, null=True)),
                ('position', models.CharField(max_length=255)),
                ('personal_contact', models.CharField(blank=True, default='0', max_length=250, null=True)),
                ('check_repair', models.BooleanField()),
                ('check_problem', models.BooleanField()),
                ('check_add', models.BooleanField()),
                ('check_replace', models.BooleanField()),
                ('check_cancle_service', models.BooleanField()),
                ('check_change', models.BooleanField()),
                ('check_miscellaneous', models.BooleanField()),
                ('check_os', models.BooleanField()),
                ('check_os_windows7', models.BooleanField()),
                ('check_os_windows10', models.BooleanField()),
                ('check_application_msoffice10', models.BooleanField()),
                ('check_application_msoffice13', models.BooleanField()),
                ('check_application_econs', models.BooleanField()),
                ('check_application_hmi', models.BooleanField()),
                ('check_application_adobeandmore', models.BooleanField()),
                ('check_application_miscellaneous', models.BooleanField()),
                ('check_mail', models.BooleanField()),
                ('check_mail_internal', models.BooleanField()),
                ('check_mail_external', models.BooleanField()),
                ('check_mail_internet', models.BooleanField()),
                ('check_ad', models.BooleanField()),
                ('check_ad_user_join', models.BooleanField()),
                ('check_ad_file_sharing', models.BooleanField()),
                ('check_ad_map_drive', models.BooleanField()),
                ('check_hardware', models.BooleanField()),
                ('check_hardware_pc', models.BooleanField()),
                ('check_hardware_nb', models.BooleanField()),
                ('check_hardware_monitor', models.BooleanField()),
                ('check_hardware_network', models.BooleanField()),
                ('check_hardware_printer', models.BooleanField()),
                ('check_hardware_miscellaneous', models.BooleanField()),
                ('detail_description', models.TextField(blank=True, max_length=40000, null=True)),
                ('issue_objective', models.TextField(blank=True, max_length=40000, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalCategory',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('name', models.CharField(default='topic name goes here', max_length=250)),
                ('image_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('background_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('video_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('image', models.TextField(blank=True, max_length=100, null=True)),
                ('background', models.TextField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(default='topic Description goes here', max_length=40000)),
                ('name_th', models.CharField(blank=True, max_length=255, null=True)),
                ('description_th', models.TextField(blank=True, max_length=40000, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical category',
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalFpe',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('issue_state', models.IntegerField(default=0)),
                ('issue_date', models.DateField(null=True)),
                ('issue_subejct', models.CharField(max_length=255)),
                ('thai_name', models.CharField(max_length=255)),
                ('english_name', models.CharField(max_length=255)),
                ('tpac_id', models.IntegerField(default=7726)),
                ('department', models.CharField(blank=True, choices=[('Account (แผนกบัญชี)', 'Account (แผนกบัญชี)'), ('Assembly Injection (เตรียมวัตถุดิบ แผนกฉีด)', 'Assembly Injection (เตรียมวัตถุดิบ แผนกฉีด)'), ('Blow (แผนกเป่า)', 'Blow (แผนกเป่า)'), ('DOC&GMP', 'DOC&GMP'), ('Engineering (แผนกวิศวกรรม)', 'Engineering (แผนกวิศวกรรม)'), ('Human Resource (ฝ่ายทรัพยากรบุคคล)', 'Human Resource ()'), ('Injection (แผนกฉีด)', 'Injection (แผนกฉีด)'), ('Injection-Blow', 'Injection-Blow'), ('IT (IT.- ECONS)', 'IT (IT.- ECONS)'), ('IT (IT.- Hardware & Software)', 'IT (IT.- Hardware & Software)'), ('Logistic (แผนกจัดส่ง)', 'Logistic (แผนกจัดส่ง)'), ('MatPrepare', 'MatPrepare'), ('Mold Shop-Blow', 'Mold Shop-Blow'), ('Planning (วางแผนการผลิต)', 'Planning (วางแผนการผลิต)'), ('Purchase (แผนกจัดซื้อ)', 'Purchase (แผนกจัดซื้อ)'), ('Quality Assurance(ส่วนประกันคุณภาพ )', 'Quality Assurance(ส่วนประกันคุณภาพ )'), ('COA (ส่วนประกันคุณภาพ )', 'COA (ส่วนประกันคุณภาพ )'), ('R&D (แผนกวิจัยพัฒนาผลิตภัณฑ์)', 'R&D (แผนกวิจัยพัฒนาผลิตภัณฑ์)'), ('Sales Admin (แผนกบริหารงานขาย)', 'Sales Admin (แผนกบริหารงานขาย)'), ('Sales Technic', 'Sales Technic'), ('Stock (แผนกคลังสินค้า)', 'Stock (แผนกคลังสินค้า)'), ('Store (แผนกพัสดุ)', 'Store (แผนกพัสดุ)')], max_length=250, null=True)),
                ('position', models.CharField(max_length=255)),
                ('personal_contact', models.CharField(blank=True, default='0', max_length=250, null=True)),
                ('check_repair', models.BooleanField()),
                ('check_problem', models.BooleanField()),
                ('check_add', models.BooleanField()),
                ('check_replace', models.BooleanField()),
                ('check_cancle_service', models.BooleanField()),
                ('check_change', models.BooleanField()),
                ('check_miscellaneous', models.BooleanField()),
                ('check_os', models.BooleanField()),
                ('check_os_windows7', models.BooleanField()),
                ('check_os_windows10', models.BooleanField()),
                ('check_application_msoffice10', models.BooleanField()),
                ('check_application_msoffice13', models.BooleanField()),
                ('check_application_econs', models.BooleanField()),
                ('check_application_hmi', models.BooleanField()),
                ('check_application_adobeandmore', models.BooleanField()),
                ('check_application_miscellaneous', models.BooleanField()),
                ('check_mail', models.BooleanField()),
                ('check_mail_internal', models.BooleanField()),
                ('check_mail_external', models.BooleanField()),
                ('check_mail_internet', models.BooleanField()),
                ('check_ad', models.BooleanField()),
                ('check_ad_user_join', models.BooleanField()),
                ('check_ad_file_sharing', models.BooleanField()),
                ('check_ad_map_drive', models.BooleanField()),
                ('check_hardware', models.BooleanField()),
                ('check_hardware_pc', models.BooleanField()),
                ('check_hardware_nb', models.BooleanField()),
                ('check_hardware_monitor', models.BooleanField()),
                ('check_hardware_network', models.BooleanField()),
                ('check_hardware_printer', models.BooleanField()),
                ('check_hardware_miscellaneous', models.BooleanField()),
                ('detail_description', models.TextField(blank=True, max_length=40000, null=True)),
                ('issue_objective', models.TextField(blank=True, max_length=40000, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical fpe',
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalIntroduction',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('name', models.CharField(default='introduction heading goes here', max_length=255)),
                ('description', models.TextField(default='introduction Description goes here', max_length=40000)),
                ('is_important', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('name_th', models.CharField(blank=True, max_length=255, null=True)),
                ('description_th', models.TextField(blank=True, max_length=40000, null=True)),
                ('image', models.TextField(blank=True, max_length=100, null=True)),
                ('file', models.TextField(blank=True, max_length=100, null=True)),
                ('file_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('image_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('video_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='IT_Dashboard.Category')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical introduction',
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSubintroduction',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('name', models.CharField(default='introduction heading goes here', max_length=255)),
                ('description', models.TextField(default='introduction Description goes here', max_length=40000)),
                ('name_th', models.CharField(blank=True, max_length=255, null=True)),
                ('description_th', models.TextField(blank=True, max_length=40000, null=True)),
                ('image', models.TextField(blank=True, max_length=100, null=True)),
                ('file', models.TextField(blank=True, max_length=100, null=True)),
                ('file_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('image_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('video_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical subintroduction',
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSubtask',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('name', models.CharField(default='introduction heading goes here', max_length=255)),
                ('description', models.TextField(default='introduction Description goes here', max_length=40000)),
                ('name_th', models.CharField(blank=True, max_length=255, null=True)),
                ('description_th', models.TextField(blank=True, max_length=40000, null=True)),
                ('image', models.TextField(blank=True, max_length=100, null=True)),
                ('file', models.TextField(blank=True, max_length=100, null=True)),
                ('file_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('image_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('video_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical subtask',
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSubtroubleshoot',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('name', models.CharField(default='troubleshoot heading goes here', max_length=255)),
                ('description', models.TextField(default='troubleshoot Description goes here', max_length=40000)),
                ('name_th', models.CharField(blank=True, max_length=255, null=True)),
                ('description_th', models.TextField(blank=True, max_length=40000, null=True)),
                ('image', models.TextField(blank=True, max_length=100, null=True)),
                ('file', models.TextField(blank=True, max_length=100, null=True)),
                ('file_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('image_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('video_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical subtroubleshoot',
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTask',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('name', models.CharField(default='introduction heading goes here', max_length=255)),
                ('description', models.TextField(default='introduction Description goes here', max_length=40000)),
                ('is_important', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('name_th', models.CharField(blank=True, max_length=255, null=True)),
                ('description_th', models.TextField(blank=True, max_length=40000, null=True)),
                ('image', models.TextField(blank=True, max_length=100, null=True)),
                ('file', models.TextField(blank=True, max_length=100, null=True)),
                ('file_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('image_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('video_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='IT_Dashboard.Category')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical task',
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTroubleshoot',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('name', models.CharField(default='introduction heading goes here', max_length=255)),
                ('cause', models.TextField(blank=True, default='Cause of the issue', max_length=40000, null=True)),
                ('description', models.TextField(default='introduction Description goes here', max_length=40000)),
                ('occurrence', models.CharField(choices=[('at least Once Everyday', 'at least Once Everyday'), ('at least Once Everyweek', 'at least Once Everyweek'), ('at least Once Everymonth', 'Everymonth'), ('Once so far', 'Once so far'), ('Few times so far', 'Few times so far')], default={'occurrence': 'Once so far'}, max_length=250)),
                ('has_been_solved', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('is_important', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('name_th', models.CharField(blank=True, max_length=255, null=True)),
                ('cause_th', models.TextField(blank=True, default='Cause of the issue', max_length=40000, null=True)),
                ('description_th', models.TextField(blank=True, max_length=40000, null=True)),
                ('image', models.TextField(blank=True, max_length=100, null=True)),
                ('file', models.TextField(blank=True, max_length=100, null=True)),
                ('file_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('image_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('video_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='IT_Dashboard.Category')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical troubleshoot',
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalUserdetail',
            fields=[
                ('id', models.IntegerField(default=7726)),
                ('fullname', models.CharField(max_length=250)),
                ('ip', models.GenericIPAddressField(blank=True, default='192.168.12.', null=True)),
                ('selfie', models.TextField(blank=True, max_length=100, null=True)),
                ('selfie_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('table', models.IntegerField()),
                ('organization', models.CharField(blank=True, choices=[('Admin and Financial (งานธุรการและการเงิน)', 'Admin and Financial (งานธุรการและการเงิน)'), ('CEO & Assist (ซีอีโอและผู้ช่วย)', 'CEO & Assist (ซีอีโอและผู้ช่วย)'), ('Center (ส่วนกลาง)', 'Center (ส่วนกลาง)'), ('Factory (โรงงาน)', 'Factory (โรงงาน)'), ('IT (IT.- เลขา)', 'IT (IT.- เลขา)'), ('Sales and Marketing (บริหารงานขาย)', 'Sales and Marketing (บริหารงานขาย)')], max_length=250, null=True)),
                ('department', models.CharField(blank=True, choices=[('Account (แผนกบัญชี)', 'Account (แผนกบัญชี)'), ('Assembly Injection (เตรียมวัตถุดิบ แผนกฉีด)', 'Assembly Injection (เตรียมวัตถุดิบ แผนกฉีด)'), ('Blow (แผนกเป่า)', 'Blow (แผนกเป่า)'), ('DOC&GMP', 'DOC&GMP'), ('Engineering (แผนกวิศวกรรม)', 'Engineering (แผนกวิศวกรรม)'), ('Human Resource (ฝ่ายทรัพยากรบุคคล)', 'Human Resource ()'), ('Injection (แผนกฉีด)', 'Injection (แผนกฉีด)'), ('Injection-Blow', 'Injection-Blow'), ('IT (IT.- ECONS)', 'IT (IT.- ECONS)'), ('IT (IT.- Hardware & Software)', 'IT (IT.- Hardware & Software)'), ('Logistic (แผนกจัดส่ง)', 'Logistic (แผนกจัดส่ง)'), ('MatPrepare', 'MatPrepare'), ('Mold Shop-Blow', 'Mold Shop-Blow'), ('Planning (วางแผนการผลิต)', 'Planning (วางแผนการผลิต)'), ('Purchase (แผนกจัดซื้อ)', 'Purchase (แผนกจัดซื้อ)'), ('Quality Assurance(ส่วนประกันคุณภาพ )', 'Quality Assurance(ส่วนประกันคุณภาพ )'), ('COA (ส่วนประกันคุณภาพ )', 'COA (ส่วนประกันคุณภาพ )'), ('R&D (แผนกวิจัยพัฒนาผลิตภัณฑ์)', 'R&D (แผนกวิจัยพัฒนาผลิตภัณฑ์)'), ('Sales Admin (แผนกบริหารงานขาย)', 'Sales Admin (แผนกบริหารงานขาย)'), ('Sales Technic', 'Sales Technic'), ('Stock (แผนกคลังสินค้า)', 'Stock (แผนกคลังสินค้า)'), ('Store (แผนกพัสดุ)', 'Store (แผนกพัสดุ)')], max_length=250, null=True)),
                ('is_head_of_department', models.BooleanField(default=False)),
                ('designation', models.CharField(blank=True, max_length=250, null=True)),
                ('level', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('permission', models.IntegerField()),
                ('is_under', models.CharField(blank=True, max_length=250, null=True)),
                ('joined_tpac', models.DateField(blank=True, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('house_location', models.CharField(blank=True, max_length=250, null=True)),
                ('personal_contact', models.CharField(blank=True, default='0', max_length=250, null=True)),
                ('likes_to_play', models.CharField(blank=True, max_length=250, null=True)),
                ('likes_to_eat', models.CharField(blank=True, max_length=250, null=True)),
                ('is_incharge_of', models.CharField(blank=True, max_length=250, null=True)),
                ('is_responsible_to', models.CharField(blank=True, max_length=250, null=True)),
                ('nickname', models.CharField(blank=True, max_length=250, null=True)),
                ('work_at', models.CharField(blank=True, default='TPAC', max_length=250, null=True)),
                ('credit', models.IntegerField(default=0)),
                ('daily_task_timeline', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('groupflow', models.TextField(blank=True, max_length=400000, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical userdetail',
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalWorklocation',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('location_address', models.CharField(max_length=100)),
                ('location_building', models.CharField(max_length=100)),
                ('location_floor', models.CharField(max_length=100)),
                ('position', geoposition.fields.GeopositionField(max_length=42)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical worklocation',
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='Introduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('name', models.CharField(default='introduction heading goes here', max_length=255)),
                ('description', models.TextField(default='introduction Description goes here', max_length=40000)),
                ('is_important', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('name_th', models.CharField(blank=True, max_length=255, null=True)),
                ('description_th', models.TextField(blank=True, max_length=40000, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=IT_Dashboard.models.introduction_file_upload)),
                ('file', models.FileField(blank=True, null=True, upload_to=IT_Dashboard.models.introduction_file_upload)),
                ('file_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('image_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('video_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IT_Dashboard.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100)),
                ('body', models.CharField(blank=True, max_length=1000, null=True)),
                ('read', models.BooleanField(default=False)),
                ('trash', models.BooleanField(default=False)),
                ('sentmessage', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('in_response_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='IT_Dashboard.Message')),
            ],
        ),
        migrations.CreateModel(
            name='Subintroduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(default='introduction heading goes here', max_length=255)),
                ('description', models.TextField(default='introduction Description goes here', max_length=40000)),
                ('name_th', models.CharField(blank=True, max_length=255, null=True)),
                ('description_th', models.TextField(blank=True, max_length=40000, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=IT_Dashboard.models.sub_introduction_file_upload)),
                ('file', models.FileField(blank=True, null=True, upload_to=IT_Dashboard.models.sub_introduction_file_upload)),
                ('file_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('image_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('video_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(default='introduction heading goes here', max_length=255)),
                ('description', models.TextField(default='introduction Description goes here', max_length=40000)),
                ('name_th', models.CharField(blank=True, max_length=255, null=True)),
                ('description_th', models.TextField(blank=True, max_length=40000, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=IT_Dashboard.models.sub_task_file_upload)),
                ('file', models.FileField(blank=True, null=True, upload_to=IT_Dashboard.models.sub_task_file_upload)),
                ('file_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('image_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('video_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subtroubleshoot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(default='troubleshoot heading goes here', max_length=255)),
                ('description', models.TextField(default='troubleshoot Description goes here', max_length=40000)),
                ('name_th', models.CharField(blank=True, max_length=255, null=True)),
                ('description_th', models.TextField(blank=True, max_length=40000, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=IT_Dashboard.models.sub_troubleshoot_file_upload)),
                ('file', models.FileField(blank=True, null=True, upload_to=IT_Dashboard.models.sub_troubleshoot_file_upload)),
                ('file_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('image_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('video_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('name', models.CharField(default='introduction heading goes here', max_length=255)),
                ('description', models.TextField(default='introduction Description goes here', max_length=40000)),
                ('is_important', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('name_th', models.CharField(blank=True, max_length=255, null=True)),
                ('description_th', models.TextField(blank=True, max_length=40000, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=IT_Dashboard.models.introduction_file_upload)),
                ('file', models.FileField(blank=True, null=True, upload_to=IT_Dashboard.models.introduction_file_upload)),
                ('file_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('image_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('video_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IT_Dashboard.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Troubleshoot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('name', models.CharField(default='introduction heading goes here', max_length=255)),
                ('cause', models.TextField(blank=True, default='Cause of the issue', max_length=40000, null=True)),
                ('description', models.TextField(default='introduction Description goes here', max_length=40000)),
                ('occurrence', models.CharField(choices=[('at least Once Everyday', 'at least Once Everyday'), ('at least Once Everyweek', 'at least Once Everyweek'), ('at least Once Everymonth', 'Everymonth'), ('Once so far', 'Once so far'), ('Few times so far', 'Few times so far')], default={'occurrence': 'Once so far'}, max_length=250)),
                ('has_been_solved', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('is_important', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('name_th', models.CharField(blank=True, max_length=255, null=True)),
                ('cause_th', models.TextField(blank=True, default='Cause of the issue', max_length=40000, null=True)),
                ('description_th', models.TextField(blank=True, max_length=40000, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=IT_Dashboard.models.introduction_file_upload)),
                ('file', models.FileField(blank=True, null=True, upload_to=IT_Dashboard.models.introduction_file_upload)),
                ('file_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('image_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('video_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IT_Dashboard.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Userdetail',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('id', models.IntegerField(default=7726)),
                ('fullname', models.CharField(max_length=250)),
                ('ip', models.GenericIPAddressField(blank=True, default='192.168.12.', null=True)),
                ('selfie', models.ImageField(blank=True, null=True, upload_to=IT_Dashboard.models.user_image_upload)),
                ('selfie_url', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('table', models.IntegerField()),
                ('organization', models.CharField(blank=True, choices=[('Admin and Financial (งานธุรการและการเงิน)', 'Admin and Financial (งานธุรการและการเงิน)'), ('CEO & Assist (ซีอีโอและผู้ช่วย)', 'CEO & Assist (ซีอีโอและผู้ช่วย)'), ('Center (ส่วนกลาง)', 'Center (ส่วนกลาง)'), ('Factory (โรงงาน)', 'Factory (โรงงาน)'), ('IT (IT.- เลขา)', 'IT (IT.- เลขา)'), ('Sales and Marketing (บริหารงานขาย)', 'Sales and Marketing (บริหารงานขาย)')], max_length=250, null=True)),
                ('department', models.CharField(blank=True, choices=[('Account (แผนกบัญชี)', 'Account (แผนกบัญชี)'), ('Assembly Injection (เตรียมวัตถุดิบ แผนกฉีด)', 'Assembly Injection (เตรียมวัตถุดิบ แผนกฉีด)'), ('Blow (แผนกเป่า)', 'Blow (แผนกเป่า)'), ('DOC&GMP', 'DOC&GMP'), ('Engineering (แผนกวิศวกรรม)', 'Engineering (แผนกวิศวกรรม)'), ('Human Resource (ฝ่ายทรัพยากรบุคคล)', 'Human Resource ()'), ('Injection (แผนกฉีด)', 'Injection (แผนกฉีด)'), ('Injection-Blow', 'Injection-Blow'), ('IT (IT.- ECONS)', 'IT (IT.- ECONS)'), ('IT (IT.- Hardware & Software)', 'IT (IT.- Hardware & Software)'), ('Logistic (แผนกจัดส่ง)', 'Logistic (แผนกจัดส่ง)'), ('MatPrepare', 'MatPrepare'), ('Mold Shop-Blow', 'Mold Shop-Blow'), ('Planning (วางแผนการผลิต)', 'Planning (วางแผนการผลิต)'), ('Purchase (แผนกจัดซื้อ)', 'Purchase (แผนกจัดซื้อ)'), ('Quality Assurance(ส่วนประกันคุณภาพ )', 'Quality Assurance(ส่วนประกันคุณภาพ )'), ('COA (ส่วนประกันคุณภาพ )', 'COA (ส่วนประกันคุณภาพ )'), ('R&D (แผนกวิจัยพัฒนาผลิตภัณฑ์)', 'R&D (แผนกวิจัยพัฒนาผลิตภัณฑ์)'), ('Sales Admin (แผนกบริหารงานขาย)', 'Sales Admin (แผนกบริหารงานขาย)'), ('Sales Technic', 'Sales Technic'), ('Stock (แผนกคลังสินค้า)', 'Stock (แผนกคลังสินค้า)'), ('Store (แผนกพัสดุ)', 'Store (แผนกพัสดุ)')], max_length=250, null=True)),
                ('is_head_of_department', models.BooleanField(default=False)),
                ('designation', models.CharField(blank=True, max_length=250, null=True)),
                ('level', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('permission', models.IntegerField()),
                ('is_under', models.CharField(blank=True, max_length=250, null=True)),
                ('joined_tpac', models.DateField(blank=True, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('house_location', models.CharField(blank=True, max_length=250, null=True)),
                ('personal_contact', models.CharField(blank=True, default='0', max_length=250, null=True)),
                ('likes_to_play', models.CharField(blank=True, max_length=250, null=True)),
                ('likes_to_eat', models.CharField(blank=True, max_length=250, null=True)),
                ('is_incharge_of', models.CharField(blank=True, max_length=250, null=True)),
                ('is_responsible_to', models.CharField(blank=True, max_length=250, null=True)),
                ('nickname', models.CharField(blank=True, max_length=250, null=True)),
                ('work_at', models.CharField(blank=True, default='TPAC', max_length=250, null=True)),
                ('credit', models.IntegerField(default=0)),
                ('daily_task_timeline', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('groupflow', models.TextField(blank=True, max_length=400000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Worklocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('location_address', models.CharField(max_length=100)),
                ('location_building', models.CharField(max_length=100)),
                ('location_floor', models.CharField(max_length=100)),
                ('position', geoposition.fields.GeopositionField(max_length=42)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='worklocation_created_by', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='worklocation_modified_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='troubleshoot',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tr_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='troubleshoot',
            name='is_expert_and_incharge',
            field=models.ManyToManyField(null=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='troubleshoot',
            name='modified_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tr_modified_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='task',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ts_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='task',
            name='is_expert_and_incharge',
            field=models.ManyToManyField(null=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='task',
            name='modified_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ts_modified_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='subtroubleshoot',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='str_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='subtroubleshoot',
            name='modified_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='str_modified_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='subtroubleshoot',
            name='troubleshoot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IT_Dashboard.Troubleshoot'),
        ),
        migrations.AddField(
            model_name='subtask',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sts_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='subtask',
            name='modified_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sts_modified_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='subtask',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IT_Dashboard.Task'),
        ),
        migrations.AddField(
            model_name='subintroduction',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='si_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='subintroduction',
            name='introduction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IT_Dashboard.Introduction'),
        ),
        migrations.AddField(
            model_name='subintroduction',
            name='modified_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='si_modified_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='message',
            name='recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipient', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='message',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='introduction',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='i_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='introduction',
            name='is_expert_and_incharge',
            field=models.ManyToManyField(null=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='introduction',
            name='modified_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='i_modified_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalworklocation',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalworklocation',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalworklocation',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaluserdetail',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaluserdetail',
            name='user',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltroubleshoot',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltroubleshoot',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltroubleshoot',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltask',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltask',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltask',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalsubtroubleshoot',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalsubtroubleshoot',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalsubtroubleshoot',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalsubtroubleshoot',
            name='troubleshoot',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='IT_Dashboard.Troubleshoot'),
        ),
        migrations.AddField(
            model_name='historicalsubtask',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalsubtask',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalsubtask',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalsubtask',
            name='task',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='IT_Dashboard.Task'),
        ),
        migrations.AddField(
            model_name='historicalsubintroduction',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalsubintroduction',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalsubintroduction',
            name='introduction',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='IT_Dashboard.Introduction'),
        ),
        migrations.AddField(
            model_name='historicalsubintroduction',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalintroduction',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalintroduction',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalintroduction',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalfpe',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalfpe',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalfpe',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcategory',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcategory',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcategory',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcategory',
            name='user',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fpe',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fpe_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fpe',
            name='modified_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fpe_modified_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='category',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='c_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='category',
            name='modified_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='c_modified_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='category',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
